==============================================================================

                   ターゲットボード用サンプル補足説明書
                Computex SH7055評価ボード 編(sh_7055_eva.TXT)
                               2002年3月25日

                Copyright (c) MiSPO Co., Ltd. 1991-2002
                       http://www.mispo.co.jp

==============================================================================


■ はじめに

本ファイルには、ターゲットボードに固有な情報が記載されています。
CPUに固有な情報に関してはSH.TXTを参照ください。


■ ファイル名規則

        vecXXX.asm ----------- ベクターテーブル
        netXXX.XXX ----------- ネットワークサンプル関連ファイル
        n4iXXX.c ------------- 周期タイマー・割込み管理
        nosXXX.c ------------- シリアルドライバ
        smpXXX.XXX ----------- 非ネットワークのサンプル関連ファイル


■ ファイル構成

        vec7055h.asm --------- ベクタテーブル設定の例          （SHC）
        vec7055x.xas --------- ベクタテーブル設定の例          （GAIO）

        initsh.c ------------- スタートアップルーチンの例      （SHC）
        startup.xas ------ スタートアップルーチンの例          （GAIO）
        n4i7055.c ------------ 周期タイマ割込みハンドラ
        nos7055.c ------------ SH7055用シリアル入出力ドライバ
        smp7055.c ------------ サンプルプログラム

        nos7055.h ------------ SH7055用シリアル入出力ドライバヘッダ
        sh7055.h ------------- SH7055 内部I/O定義

        sh7055_eva.txt ------- ターゲットボード用サンプル補足説明書

■ ロードモジュール生成用ファイル構成

+-----------------------------------------------------------------------------
|
|                                  SHC
|
+-----------------------------------------------------------------------------

    SHC5 ----------------- SHC Ver.5 用ディレクトリ
    SHC6 ----------------- SHC Ver.6 用ディレクトリ
    SHC7 ----------------- SHC Ver.7 用ディレクトリ

        smp7055_Hew ---------- HEW 用ディレクトリ
        SH7055ev.hws --- HEW 用ワークスペースファイル

        smp7055h.mak --------- サンプルプログラム makefile
        smp7055h.sub --------- リンカのサブコマンドファイル

+-----------------------------------------------------------------------------
|
|                               GAIO XASS-V
|
+-----------------------------------------------------------------------------

    GAIO ----------------- GAIO XASS-V 用ディレクトリ

        smp7055x.mak --------- サンプルプログラム makefile
        smp7055.XLS  --------- リンカコマンドファイル
        opt.com      --------- オプションパラメータファイル

■ 割り込みハンドラ

          割込みハンドラもＣ言語で記述できますが、以下のようにコードが展開さ
          れることを確認してください。

SHCでのコード展開例

        お使いのコンパイラのバージョンをご確認の上"C:\NORTi\DOC"フォルダに有
        るバージョン別ドキュメントファイル SHCV7xx.txt SHCV60x.txt SHCV5.txt
        のSH-2Eの項を参照し対応するコードが展開されることを確認してください。

GAIO XASSV でのコード展開例

    割込みハンドラはＣ言語で記述できます。INTHDR は、__interrupt void
        と定義されています。

        ｜INTHDR inthdr(void)
        ｜{
        ｜    ent_int();
        ｜       :
        ｜    ret_int();
        ｜}

        割込み優先度がカーネルレベル以下の割込みハンドラのコンパイルには、
        必ず、デバッグオプション -d は付けないでください。ent_int 呼び出しの
        前に、不要な命令が生成されないよう注意し、以下のようなコードが展開さ
        れることを確認してください。
        また、割込み優先度がカーネルレベルより高い割込みハンドラの場合は、
        この制限はありませんが ent_int, ret_int を含めた一切のシステムコール
        を使用することが出来ません。

        ｜_inthdr:
        ｜        sts.l   pr,@-r15
        ｜        sts.l   macl,@-r15
        ｜        sts.l   mach,@-r15
        ｜        sts.l   fpul,@-r15
        ｜        sts.l   fpscr,@-r15
        ｜        mov.l   r10,@-r15
        ｜        mov.l   S1__v3_ent_int,r10
        ｜        mov.l   r11,@-r15
        ｜        mov.l   r12,@-r15
        ｜        mov.l   r13,@-r15
        ｜        mov.l   r3,@-r15
        ｜        mov.l   r4,@-r15
        ｜        mov.l   r5,@-r15
        ｜        mov.l   r6,@-r15
        ｜        mov.l   r7,@-r15
        ｜        mov.l   r0,@-r15
        ｜        fmov.s  fr0,@-r15
        ｜        fmov.s  fr1,@-r15
        ｜        fmov.s  fr2,@-r15
        ｜        fmov.s  fr3,@-r15
        ｜        fmov.s  fr4,@-r15
        ｜        fmov.s  fr5,@-r15
        ｜        fmov.s  fr6,@-r15
        ｜        jsr     @r10
        ｜        fmov.s  fr7,@-r15
        ｜
        ｜         :
        ｜        mov.l   S1__v3_ret_int,r10
        ｜        jsr     @r10
        ｜        nop
        ｜         :
        ｜        rte
        ｜        nop
        ｜
        ｜        bnd 2
        ｜        S1__v3_ret_int: dd _v3_ret_int
        ｜        S1__v3_ent_int: dd _v3_ent_int


■ 周期タイマと割込み管理機能（SH7055）

        SH7055 の周期タイマ割込みサービスルーチンと割込み管理機能は、n4i7055.c
        に定義されています。
        オプション指定は <op> と略記しています。

使用するハードウェア

        SH7055 内蔵 ATU-IIのチャネル 3〜7 を周期タイマとして使用しています。
        それ以外のタイマを用いる場合は、ユーザーで改造してください。

割込み周期の指定

        割込み周期は、MSEC マクロで決まります。デフォルトは 10 msec です。
        例えば、5 msec に変更する場合は、次の様にコンパイルしてください。

        (例) shc <op> -def=MSEC=5 n4i7055.c  ------------------- SHC
        (例) xccv n4i7055.c <op> -DMSEC=5 ---------------------- GAIO XASSV

クロックの指定

        内部クロックのデフォルトは 40 MHz です。変更する場合は CLK マクロ
        を定義してコンパイルしてください。
        値は [Hz] 単位の周波数です。
        例えば、20MHz に変更する場合は、次の様にコンパイルしてください。

        (例) shc  <op> -def=CLK=20000000 n4i7055.c  ------------ SHC
        (例) xccv n4i7055.c <op> -DCLK=16000000 ---------------- GAIO XASSV

チャネル番号の指定

        CH マクロで、使用する ATU-II のチャネルを指定できます（CH=3〜7）。
        ルデフォトは CH=3 です。例えば、チャネル6 に変更する場合は、次の様
        にコンパイルしてください。

        (例) shc  <op> -def=CH=6 n4i7055.c  -------------------- SHC
        (例) xccv n4i7055.c <op> -DSH=1 ------------------------ GAIO XASSV

割込みベクタテーブル

        def_inh システムコールによる割込みベクタの設定を可能にするため、
        RAM 先頭（00400000H 番地から 1024 バイト）に、割込みベクタテーブルが
        あると想定しています。
        割込みベクタテーブルの領域が、他の領域と重ならない様にリンクしてく
        ださい。（重なってもリンカで警告は出ません!）
        割込みベクタテーブル先頭アドレスは INTVEC マクロで、サイズ（バイト
        数）は、INTVSZ マクロで変更できます。
        例えば、800000 番地から 628 Byte に変更する場合は、次の様にコンパ
        イルしてください。

        (例) shc <op> -def=INTVEC=0x800000,INTVSZ=628 n4i7055.c
                                            ------------------ SHC
        (例) xccv n4i7055.c <op> -DINTVEC=0x800000 -DINTVSZ=628
                                            ------------------ GAIO XASS-V

        割込みベクタテーブルが ROM 上にあり、def_inh に依らず直接ベクタを定
        義する場合、INTVSZ=0 としてください。
        この場合、def_inh システムコールは機能しません。

割込み優先順位

        本ハンドラの、デフォルトの割込み優先順位は、7 です。これを変更する
        場合、IP マクロを定義してコンパイルしてください。ただし、カーネルよ
        り高優先にはできません（IP ≦ KNL_LEVEL）。本ハンドラより高優先度の
        割込みハンドラが有る場合、多重割込みが起こります。
        例えば、割込み優先順位 2 に変更する場合は、次の様にコンパイルしてく
        ださい。

        (例) shc  <op> -def=IP=2 n4i7055.c  -------------------- SHC
        (例) xccv n4i7055.c <op> -DIP=2 ------------------------ GAIO XASSV

時間情報の取り出し

        時間情報を取り出す事が出来ないデバッガを用いて、RTOS対応機能を使用
        する場合は HOOKマクロを指定することにより、ソフト的に時間情報を生成
        します。

        例えば、コンピューテックスROMICE64で RTOSデバッグライブラリを使用し
        ている場合は、次の様にコンパイルしてください。

        (例) shc <op> -def=HOOK=2 n4i7055.c  ------------------- SHC
        (例) xccv n4i7055.c <op> -DHOOK=2 ---------------------- GAIO XASSV

dis_int, ena_int

        この２つのシステムコールは用意していませんので、個別の割込み禁止許
        可を行いたい場合は、各制御レジスタを直接アクセスしてください。


■ シリアル入出力ドライバ(SH7055）

        SH7055 ののシリアル入出力ドライバは、nos7055.c に定義されています。
        （コンパイルオプションは <op> と省略）
        ここに定義されている１チャネル分の処理は、nosio.c のシリアル入出力
        関数経由で呼び出されます。

カーネルの指定

        NORTi Version4 カーネルのシステムコールを使用することを宣言するため
        V4 マクロを定義します。（V3 マクロを定義した場合は、NORTi3 カーネル
        を使用か、NORTi3 互換システムコールとしてコンパイルされます。）

          (例) shc <op> -def=V4 nos7055.c  -------------------- SHC
          (例) xccv nos7055.c <op> -DV4 ----------------------- GAIO XASSV

チャネル番号の指定

        CH マクロで、論理チャネル番号を指定できます。（無指定時は、CH=0）
        CH は 0〜4 を指定できます。
        CH0, CH1, CH2, CH3, CH4 マクロで、物理チャネル番号を変更できます。

        複数チャネルをリンクする場合は、重複しないモジュール名となるよう
        コンパイルしてください。

          (例) shc <op> -def=CH=1 -o=nosch1.o nos7055.c  ------ SHC
          (例) xccv nos7055.c <op> -DCH=1 --------------------- GAIO XASSV

ボーレート･ジェネレータ

        内部クロックのデフォルトは 40 MHz です。変更する場合 は CLKマクロ
        を定義してコンパイルしてください。
        値は [Hz] 単位の周波数です。

          (例) shc <op> -def=CLK=20000000 nos7055.c  ---------- SHC
          (例) xccv nos7055.c <op> -DCLK=20000000 ------------- GAIO XASSV

送受信バッファサイズの指定

        受信／送信バッファのサイズを、BUFSZ マクロにより定義してコンパイル
        してください。受信バッファと異なるサイズの送信バッファを用いる場合
        は、さらに TXBUFSZ マクロを定義してください。
        未指定時は、受信／送信バッファ共 1024 バイトとなります。

          (例) 受信バッファ, 送信バッファ共 128 バイト BUFSZ=128
          (例) 受信バッファ128, 送信バッファ 64 バイト BUFSZ=128, TXBUFSZ=64

ソフトウェア･フロー制御

        XON/XOFF キャラクタによるフロー制御を用いない場合、NOXON マクロを定
        義してコンパイルしてください。コードサイズと処理速度を節約できます。

割込み優先順位

        本ハンドラの、デフォルトの割込み優先順位は、7 です。
        これを変更する場合、IP マクロを定義してコンパイルしてください。
        ただし、カーネルより高優先にはできません。（IP ≦ KNL_LEVEL）
        本ハンドラより高優先度の割込みハンドラが有る場合、多重割込みが起こ
        ります。例えば、割込み優先順位 2 の場合は、次のようにコンパイルして
        ください。

          (例) shc <op> -DIP=2 nos7055.c  --------------------- SHC
          (例) xccv nos7055.c <op> -DCLK=IP=2  ----------------- GAIO XASSV

シリアル入出力使用端子の初期化

        シリアル入出力で使用される端子は、全て他の機能と多重化されています。
        本ドライバの初期化ルーチンでは PFC を設定していませんので、予めシリ
        アル入出力で使用できるように PFC を設定してください。

未サポート機能

        調歩同期式モードのみで、クロック同期式モードはサポートしていません。
        内蔵ボーレートジェネレータのみで、外部クロック入出力はサポートして
        いません。
        RTS 信号出力  CTS 信号入力によるハードウェアフロー制御はサポートし
        ていません。
        DTR 信号出力、DSR 信号入力、CD 信号入力はサポートしていません。


■ その他注意事項

スタートアップルーチン

        特別なスタートアップルーチンは必要有りませんが、割込みベクタの領域
        は、サンプルを参考に作成してください。

割込みハンドラと割込みサービスルーチン

        割込み番号が同一の割込みハンドラと割込みサービスルーチンを定義/生成
        することは出来ません。ただし、割込み番号が異なれば割込みハンドラと
        割込みサービスルーチンを併用することが出来ます。

内部 I/O レジスタの入出力

        ユーザープログラムから内部 I/O レジスタへのアクセスに関して、何の制
        限もありません。付属の shxxxx.h ファイルに、SHxxxx の内部 I/O レジ
        スタの定義と、その入出力用マクロ sfr_xxx() が定義されていますが、
        ユーザープログラムでの使用を強制するものではありません。
        SH のビット操作は数命令を必要とします。同じポートを複数のタスクや割
        込みハンドラからアクセスする場合は、排他制御が必要であることに、十
        分注意してください。

割込みレベル

        SH では、割込みに対する 16レベルの許可/禁止が可能です。NORTi カーネ
        ルはレベル 14 で、タスクはレベル 0 で実行されます。割込みハンドラは
        レベル 1〜14 を選択できます。
        レベル 15 割込みは、カーネルより優先的な割込みとして使用できます。
        ただし、カーネルより高優先の割込みからは、一切のシステムコールを発
        行できません。

        カーネルレベルとして 1〜15 の任意の値も指定できます。このためには、
        #include "nocfg4.h"（NORTi3 互換モードでは、#include "nocfg3.h"）の
        前に、#define KNL_LEVEL ?  を定義してください。割込みハンドラにはレ
        ベル 1〜KNL_LEVEL を選択できます。

メモリプール用メモリ

        メモリプール用メモリのサイズをコンフィグレーションで指定すると、メモ
        リプール用メモリに対して独立したセクション名が与えられます。
        セクション名は、SHCでは BMPLMEM、Green Hills では .MPLMEM、exeGCC,
        IAR EW, GAIO XASS-Vでは MPLMEM になります。
        リンクする際には、このセクションの配置と、必要な場合はアドレスを定義
        てください。

スタック用メモリ

        スタック用メモリのサイズをコンフィグレーションで指定すると、スタック
        用メモリに対して独立したセクション名が与えられます。
        セクション名は、SHCでは BSTKMEM、Green Hills では .STKMEM、exeGCC,
        IAR EW, GAIO XASS-Vでは STKMEM になります。
        リンクする際には、このセクションの配置と、必要な場合はアドレスを定義
        てください。


■ サンプルプログラムについて

        付属のサンプルには特定のハードウェアに依存している部分があります。
        特に、次のポイントに注意してカスタマイズしてください。
        smp7055 の RAM を 00800000〜 に変更する例を示します。コンパイルオ
        プションは <op> と略記しています。

初期化のスキップ

        プログラム実行時に既に初期化されている場合があります。このような場合
        プログラムで再初期化を行うと、DRAMにロードされていたプログラムが破壊
        される可能性があります。
        サンプルプログラムでは、リフレッシュタイマコントロール／ステータスレ
        ジスタ（RTCSR）にゼロ(初期値)以外が入っていると初期化をスキップします。

データ領域

        データ領域を、RAM 先頭に修正してください。
        RAM 領域の先頭 1024バイトには、割込みベクタテーブルを配置するので
        + 0x400 した番地にします。

        (例) smp7055.sub:
               START VECT(00000000),P,C,D(00000100),R,B,STACK(00800400)
                                              ----------------- SHC
        (例) smp7055.XLS
               /addr = 00800400
               /sect = D1*|comm (data = _DATA1) --------------- GAIO XASS-V

割込みベクタ

        割込みベクタは、RAM の先頭に配置してください。

        (例) smp7055h.mak: shc <op> -def=INTVEC=0x00800000 n4i7055.c
                                            ------------------- SHC
        (例) smp7055x.mak: xccv n4i7055.c <op> -DINTVEC=0x2000000
                                            ------------------- GAIO XASS-V

スタックポインタ初期値

        SHCとexeGCCでは、SP 初期値を使用できる RAM の最終アドレス+1
        に修正してください。
        ROM エミュレータ等を使用した場合には、RAM がワーク領域として必要に
        なることがありますので、領域が重ならないように注意してください。

        (例) smp7055h.mak:
               asmsh vec7055h.asm <op> -def=_INIT_STACK="H'008FF000"
        (例) vec7032x.xas:
                STACK_END   equ 008FF000h ---------------- GAIO XASSV

クロック

        周期タイマ割込みハンドラのクロックの定義（CLK マクロ）を、システム
        に合わせて修正してください（下記の例では 16 MHz）。

        (例) smp7055h.mak: shc <op> -def=CLK=16000000 n4i7055.c
                                             ------------------ SHC
        (例) smp7032x.mak: xccv <op> -DCLK=16000000 n4i7055.c
                                             ------------------ GAIO XASSV

ハードウェア初期化

        プロセッサの初期化（ウェイト数設定）やポート初期化部分も必要に応じ
        てユーザーで作成してください。
        メモリの初期設定などプログラムの最初に処理が必要な場合、ベクタ設定
        vec7055?.asm のリセットベクタに追加してください。


■トラブルシューティング

main 関数まで来ない時

        NORTi を組み込んだプログラムでも、main 関数で syssta(); を実行する
        までは、通常のシングルタスクのプログラムです。
        NORTi を組み込まない単純なプログラムで main 関数まで来るように、ス
        タートアップを見直して下さい。
        ・RAM 使用の前に、チップセレクト（バス幅）等の設定の初期化が終わって
          いるか。
        ・各セクションのアドレス定義は正しいか。
        ・DRAM にプログラムをロードする場合、実行後に初期化を行っていないか。
          （このような場合は、予め初期化されており、DRAM の再初期化によって
            ロードされているプログラムが破壊されることがあります。）

sysini でハングアップする時

        sysini() から呼び出す intini() 関数で、割込みベクタの初期設定を行っ
        ています。intini 関数にブレークポイントを設定し、初期化内容がシステ
        ムと合致しているか確認してください。
        また、スタックポインタが正しいか確認してください。SH では、sysini()
        に来るまでスタックを使用しない場合があり、必ずスタックを使用する
        sysini() でハングアップすることがあります。

syssta からリターンする時

        先に実行した cre_??? や sta_tsk でエラーがあった場合、syssta を実行
        しても、マルチタスクへ移行せずにリターンしてきます。
        システム変数 SYSER（int 型）のエラーコードをウォッチしながら、main
        をステップ実行し、原因を特定して下さい。ID 上限のチェックでエラーと
        なることが考えられます。他に、cre_??? でエラーとなる場合、メモリ不
        足が考えれれます。

get_blk, get_blf や rcv_msg でハングアップする時

        引数にポインタへのポインタを渡しているか（& を付け忘れていないか）
        確認してください。

rel_blk, rel_blf や snd_msg でハングアップする時

        メモリブロックやメッセージのアドレスが奇数でないか調べてください。

割込みがかかると暴走する時

        main 関数は無事に通過するが、マルチタスクへ移行しようとすると暴走す
        る場合、まず、割込みハンドラを外してみてください。具体的には、
        intsta(); を外してください。これで暴走が止まる場合、割込みハンドラ
        への分岐処理が正しいか見直して下さい。また、割込みハンドラのコード
        展開も確認して下さい。
-------------------------------------------------------------------------------

