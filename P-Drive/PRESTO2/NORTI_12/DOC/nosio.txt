                                                                             1

シ  リ  ア  ル  入  出  力  ド  ラ  イ  バ  の  概  要 
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

特徴
 
          NOSIO は、送受信とも割込みを利用した NORTi 対応のシリアル入出力ドラ
          イバです。
          このドライバでは、RS-232C の１文字送信と１文字受信をタイムアウト付
          きで実現します。

機能
 
          ・RS-232C 調歩同期式全二重
          ・送受信共、割込み駆動
          ・１文字送受信機能のみ（１行送受信はユーザ作成）
          ・XON/XOFF キャラクタによるソフトウェアフロー制御を選択可
          ・DTR-CTS または RTS-CTS 信号によるハードウェアフロー制御を選択可

コンパイル
 
          NOSIO はソースで提供されます。必要なチャネル数に合わせてコンパイル
          し、ユーザープログラムとリンクしてください。
          コンパイル方法は、各ソースファイルのコメントを参照してください。

注意事項
 
          シリアル入出力関数は、同じ関数が、複数のタスクから同時に呼ばれるこ
          とを考慮していません。必要ならば、ユーザー側で排他制御してください。
 
          本書には標準的な機能を記載していますが、デバイスに依存する事項が多
          いので、付属ソースファイルのヘッダに必ず目を通してください。

                                                                             2

シ  リ  ア  ル  入  出  力  関  数 
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｉ  ｎ  ｉ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル入出力初期化

【形式】  ER ini_sio(ch, param);
 
          INT ch;       チャネル番号
          B *param;     通信パラメータ文字列

【解説】  ch で指定したチャネルの RS-232C インターフェースを初期化します。
          RS-232C のパラメータ param を、次の文字列で指定してください。
          大文字、小文字は区別しません。各パラメータの間には、１個以上のス
          ペースを入れてください。
 
            "300"〜"38400" ---- ボーレート
            "B8","B7"  -------- キャラクタ長８, ７
            "PN","PE","PO" ---- パリティ無, 偶, 奇
            "S1","S2"  -------- ストップビット１, ２
            "XON"  ------------ XON/OFFによるソフトウェアフロー制御有り
            "DTR"  ------------ DTR-CTSによるハードウェアフロー制御有り
            "RTS"  ------------ RTS-CTSによるハードウェアフロー制御有り
 
          (例) ini_sio(0, "2400 B7 PE S2 XON");
 
          デフォルトは、「9600ボー、キャラクタ長8、パリティ無し、ストップ
          ビット1、フロー制御無し」です。
          param の不正のチェックは厳密には行っていません。
 
          初期化後は、送受信ともディセーブル、DSR OFF、RTS OFF となります。
          従って、初期化後に ctl_sio 関数で、送受信イネーブル、DSR ON、RTS
          ON とする必要があります。

【戻値】  E_OK       正常終了
          E_PAR      チャネル番号範囲外, 通信パラメータ不正
          E_NOMEM    メモリ不足

【注意】  パソコン用の NOSIO では、ini_sio 内部で、送受信バッファを確保する
          ため、排他制御なしに malloc 関数を実行しています。

                                                                             3

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｅ  ｘ  ｔ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル入出力終了

【形式】  void cdecl ext_sio();

【解説】  RS-232C インターフェースを初期化前の状態に戻します。
 
          パソコン用のプログラムでは、終了時に必ず呼び出してください。
          本関数を実行せずにプログラムを終了すると、RS-232C の割込みが生き
          残っており、後で暴走の原因となります。

【戻値】  戻値はありません。

【注意】  パソコン用の NOSIO では、ext_sio 内部で、送受信バッファを解放する
          ため、排他制御なしに free 関数を実行しています。

                                                                             4

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｇ  ｅ  ｔ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル１文字入力

【形式】  ER get_sio(ch, p_c, tmout);
 
          INT ch;       チャネル番号
          UB *p_c;      入力した文字
          TMO tmout     タイムアウト時間

【解説】  ch で指定したチャネルから受信したキャラクタを *p_c に返します。
          受信したキャラクタが無ければ、受信するまで待ちます。
          tmout でタイムアウト時間を指定します。tmout = TMO_FEVR ならばタイ
          ムアウトを監視しません。
          tmout = 0 で、受信したキャラクタが無い場合は、タイムアウトエラーと
          して即座にリターンします。
          rel_wai システムコールにより、受信待ちを解除できます。
 
          (例) get_sio(0, &c, TMO_FEVR);

【戻値】  E_OK       正常終了
          E_TMOUT    受信タイムアウト
          E_RLWAI    受信待ち解除
          E_PAR      チャネル番号範囲外
          EV_SIOOVF  受信バッファオーバフロー
          EV_SIOPTY  パリティエラー
          EV_SIOORN  オーバーランエラー
          EV_SIOFRM  フレーミングエラー

                                                                             5

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｐ  ｕ  ｔ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル１文字出力

【形式】  ER put_sio(ch, c, tmout);
 
          INT ch;       チャネル番号
          UB c;         出力する文字
          TMO tmout     タイムアウト時間

【解説】  ch で指定したチャネルへキャラクタ c を送信します。
          送信にもバッファを設けていますので、実際に送信が行われた時点ではな
          く、送信バッファに格納した時点で送信完了と見なされます。真の送信完
          了を待つ場合は、続けて fls_sio を実行して下さい。
          すでに送信バッファが一杯ならば、空きが出るまで待ちます。
          tmout でタイムアウト時間を指定します。tmout = TMO_FEVR ならばタイ
          ムアウトを監視しません。
          tmout = 0 で、送信バッファに空きがない場合は、タイムアウトエラーと
          して即座にリターンします。
          rel_wai システムコールにより、送信待ちを解除できます。
 
          (例) put_sio(0, c, 100/MSEC);

【戻値】  E_OK       正常終了
          E_TMOUT    送信タイムアウト
          E_RLWAI    送信待ち解除
          E_PAR      チャネル番号範囲外

                                                                             6

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｃ  ｔ  ｌ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル入出力制御

【形式】  ER ctl_sio(ch, fncd);
 
          INT ch;       チャネル番号
          UH fncd;      機能コード

【解説】  機能コード fncd により、ch で指定したチャネルの制御を行います。
          fncd には、nosio.h ファイルで定義されている次の値を指定してくださ
          い。
 
            TSIO_RXE      受信イネーブル
            TSIO_RXD      受信ディセーブル
            TSIO_TXE      送信イネーブル
            TSIO_TXD      送信ディセーブル
            TSIO_RTSON    RTS信号ON
            TSIO_RTSOFF   RTS信号OFF
            TSIO_DTRON    DTR信号ON
            TSIO_DTROFF   DTR信号OFF
            TSIO_RXCLR    受信バッファクリア
            TSIO_TXCLR    送信バッファクリア
            TSIO_SBON     ブレーク送信ON
            TSIO_SBOFF    ブレーク送信OFF
 
          (例) ctl_sio(0, TSIO_RXE|TSIO_TXE|TSIO_DTRON|TSIO_RTSON);

【戻値】  E_OK       正常終了
          E_PAR      チャネル番号範囲外

                                                                             7

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｒ  ｅ  ｆ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル入出力状態参照

【形式】  ER ref_sio(ch, pk_sios);
 
          INT ch;           チャネル番号
          T_SIOS *pk_sios;  シリアル入出力状態パケット

【解説】  ch で指定したチャネルの状態を *pk_sios に返します。
          シリアル入出力状態パケット T_SIOS 構造体は、nosio.h ファイルの中で
          次のように定義されています。
 
            typedef struct t_sios
            {
                UB siostat;      シリアル入出力ステータス
                UB rxchr;        受信バッファの先頭の文字
                UH rxlen;        受信バッファのデータ長
                UH frbufsz;      送信バッファの空きサイズ
                UH eotcnt;       受信バッファの終端文字個数
 
            } T_SIOS;
 
          構造体メンバー siostat は次のビットより構成されます。
 
            TSIO_CD      受信キャリア検出
            TSIO_CTS     CTS信号ON(1)/OFF(0)
            TSIO_TXEMP   送信バッファ空
            TSIO_PE      パリティエラー
            TSIO_OE      オーバランエラー
            TSIO_FE      フレーミングエラー
            TSIO_BD      ブレーク状態検出
            TSIO_DSR     DSR信号ON(1)/OFF(0)
 
          (例) T_SIOS sios;
 
               ref_sio(0, &sios);
               if (sios.siostat & TSIO_DSR)
                    :

【戻値】  E_OK       正常終了
          E_PAR      チャネル番号範囲外


                                                                             8

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 ｆ  ｌ  ｓ  ＿  ｓ  ｉ  ｏ 
───────────────────────────────────────

【機能】  シリアル送信バッファ･フラッシュ

【形式】  ER fls_sio(ch, tmout);
 
          INT ch;       チャネル番号
          TMO tmout     タイムアウト時間

【解説】  ch で指定したチャネルの送信バッファにたまっているデータを、全て送
          り出します。
          tmout でタイムアウト時間を指定します。tmout = TMO_FEVR ならばタイ
          ムアウトを監視しません。
          rel_wai システムコールにより、送信待ちを解除できます。
 
          (例) fls_sio(0, 1000/MSEC);

【戻値】  E_OK       正常終了
          E_TMOUT    送信タイムアウト
          E_RLWAI    送信待ち解除
          E_PAR      チャネル番号範囲外
