１．各プロセッサ対応版に共通な事柄

　　○config.makでの設定に関して
　　　・"CPU"ではターゲットプロセッサを設定します。設定可能なプロセッサ名と、動作検証を
　　　　行ったボード名は次の通りです。
　　　　なお、ボードは全て株式会社日立超ＬＳＩシステムズ製　SuperH SolutionEngineです。

　　　　sh7615 .... MS7615SE01
　　　　sh7709 .... MS7709RP01（※１）,MS7709ASE01（※２）
　　　　sh7750 .... MS7750SE01（※３）

　　　　※１：恐らくMS7709SE01ボードと同一ですが、動作検証を行ったボードの型番表記が
　　　　　　　この名称のためそのまま記載しました。
　　　　※２：スタンドアロン環境用のスタートアップルーチンは作成しておりません。
　　　　　　　HI7700上で動作検証を行いました。
　　　　※３：キャッシュを有効にした状態ではDP83092の初期化で障害が発生しています。
　　　　　　　原因は調査中です。

　　　・"COMPILER"では使用するコンパイラを設定します。日立SH-Cコンパイラのみ設定可能
　　　　です。

　　　・"RTOS"には使用するRTOSを設定します。下記の設定が可能です。

　　　　none ...... スタンドアロン
　　　　hi77xx .... HI7000 / HI7700 / HI7750（※４）

　　　　※４：hi77xxを選択した場合、USNET側のmakefileではライブラリの作成までを
　　　　　　　行います。リンクはUSNET側のmakefileで行うのではなく、RTOS側の構築
　　　　　　　環境で行って下さい。この際、下記のUSNET側のライブラリファイルを一緒に
　　　　　　　結合して下さい。

　　　　　　　usnet.lib
　　　　　　　uscpu.lib
　　　　　　　usdrv.lib
　　　　　　　usiap.lib（オプションのUSNET/IAPを使用する場合のみ）
　　　　　　　uscgi.lib（オプションのUSNET/IAPを使用する場合のみ）
　　　　　　　snmp.lib （オプションのUSNET/SNMPを使用する場合のみ）

　　　　　　　また、USNETを使用するアプリケーションプログラムをコンパイルする際には
　　　　　　　USNETの下記のディレクトリをインクルードヘッダパスで指定する必要があります。

　　　　　　　INCLUDEディレクトリ
　　　　　　　INCLUDE\RTOS\HI77XXディレクトリ

　　　・"RTOS_INCLDDE"にはRTOS側のヘッダファイルが格納されているディレクトリのパスを
　　　　設定します。スタンドアロンの場合には指定する必要はありません。

　　　・"USROOTDIR"にはUSNETをインストールしたディレクトリ名を設定します。
　　　・"BOARD"は使用していません。
　　　・"USNET","USIAP","USSNMP","USPPP"はそれぞれUSNET本体,USNET/IAP,USNET/SNMP,
　　　　USNET/PPPを使用するかどうかを選択します。
　　　　デフォルトではUSNET本体以外は使用しない設定になっていますが、例えばIAPを
　　　　有効にする場合には下記の部分を

　　　　%set USIAP=                      #  USIAP libraries
　　　　#%set USIAP=usiap uscgi

　　　　下記の様に変更します。

　　　　#%set USIAP=                      #  USIAP libraries
　　　　%set USIAP=usiap uscgi

　　　　SNMP及びPPPも同様です。なお、USNET本体は無効にできません。

　　○INCLUDE\local.hの定数に関して
　　　・メモリ容量にかなり余裕があるので、USNET本来のデフォルト値からバッファ数
　　　　等を若干変更してあります。
　　　・SH7615ではアーキテクチャ上通信バッファが16バイトアライメントで配置
　　　　されていなければならないため、USSBUFALIGNを16に設定して下さい。これに伴い
　　　　MAXBUFの最低値はデフォルトの1536から1552に増加します。
　　　・LOCALHOSTNAMEで取得される、自ホストのホスト名は固定名（"none"）になっています。
　　　　自ホストのホスト名を変更した場合、netconf.cも併せて変更する必要があります
　　　　ので注意して下さい。
　　　・PPPを使用する場合は下記の行をコメントアウトして下さい。

          #undef PPP

　　○INCLUDE\net.h及びINCLUDE\socket.hに関して
　　　SH-Cコンパイラの標準ヘッダファイルとの間で名前の衝突が起こるため、
　　　定数EBADFをundefしてから再定義しています。EBADFをSH-Cコンパイラ本来の用途で
　　　使用する場合には注意して下さい。

　　○INCLUDE\RTOS\HI77XX\mtmacro.hに関して
　　　・NET_PRIORはUSNET内部で使用するタスクの優先順位です。このタスクの優先順位は
　　　　USNETを使用する他のタスクよりも高くなければなりません。
　　　・MIN_TSK_ID及びMAX_TSK_IDはスタティックスタックを使用するタスクのタスクIDの
　　　　範囲を設定します。この設定はHI7700側の設定と一致させます。
　　　　なお、RUNTASKマクロはデフォルトではダイナミックスタックを使用する様に
　　　　設定されています。詳細はmulti.cの説明を参照して下さい。
　　　・EVBASEは０固定です。変更しないで下さい。
　　　・FLGBASEはUSNETが使用するイベントフラグのID番号を設定します。USNETは内部で
　　　　(2*(NCONNS+NNETS)+2)/32個のイベントフラグを使用します。FLGBASEはこれらの
　　　　イベントフラグIDのベース番号になります。
　　　　このイベントフラグはあらかじめ生成されていなければなりません。

　　○INCLUDE\RTOS\HI77XX\multi.cに関して
　　　・タスクの生成に関するモジュールです。当然、HI7xxx用です。
　　　・このファイルは構築時にNETSRCディレクトリにコピーしてからコンパイルされます。
　　　・スタティックスタック用とダイナミックスタック用の２通りを選択できる様に
　　　　なっていますが、スタティックスタック時の動作検証は行っておりません。
　　　・スタティックスタックの場合のタスクIDはmtmacro.h中のMIN_TSK_IDから
　　　　MAX_TSK_IDまでの範囲で空いているタスクIDを検索して使用します。
　　　　MIN_TSK_ID及びMAX_TSK_IDの値はHI7xxx側の設定と一致していなければ
　　　　なりません。
　　　・ダイナミックスタックの場合のスタックサイズは定数を設定しています。
　　　　とりあえず、かなり余裕のある値を設定しています。
　　　・ダイナミックスタックの場合には１秒間のタイムスライスを設定しています。
　　　　システムの事情に応じてタイムスライスは禁止しても構いません。

　　○NETSRC\netconf.c
　　　・自ホストのMACアドレスはここで設定します。
　　　・ホスト名"none"を持ったエントリが自ホストの設定です。
　　　・NS8390ドライバ（MS7709RP01,MS7709ASE01,MS7750SE01用）とSH7615ドライバ
　　　　（MS7615SE01用）の両方の設定例が書かれていますので、必要ない方をコメント
　　　　アウトして下さい。

　　○DRVSRC\ns8390.c,DRVSRC\ns8390.h
　　　・MS7709RP01,MS7709ASE01,MS7750SE01ボード上のDP83902用ドライバです。
　　　・ドライバ名は"NS8390"です。
　　　・通常のUSNETパッケージにも同名のファイルが存在しますが、若干改造を加えて
　　　　あります。
　　　・ドライバ名は"NS8390"です。

　　○DRVSRC\sh7615.c,DRVSRC\sh7615.h
　　　・MS7615SE01ボード用のイーサネットドライバです。
　　　・ドライバ名は"SH7615"です。
　　　・イーサネットコントローラの割り込み番号及び優先順位の設定はsh7615.h中に
　　　　存在します。また、送信・受信ディスクリプタ数の設定はsh7615.c中に存在
　　　　します。
　　　・起動後のLANケーブルの抜き差しにも対応しています。抜き差しにより通信モード
　　　　が変化した場合には自動認識します。
　　　・初期化時にタイマを使用している関係上、もしもタイマが正常に動作していない
　　　　と初期化時に永久ループに陥ります。タイマが正常に動作していない事はUSNETに
　　　　とって致命的な障害なのでここでは特に救済措置は行っておりません。

２．SH7615対応版に関する事

　　○CONFIG\SH7615\HITACHI\compiler.makに関して
　　　・"ENDIAN"はBIG固定です。
　　　・"RAM"は実行環境を設定します。ROMに書き込んで実行する場合は0、RAMにダウンロード
　　　　して実行する場合は1を設定します。
　　　・"CACHE"はキャッシュの使用の有無を設定します。キャッシュを使用する場合には
　　　　1、使用しない場合には0を設定します。
　　　・"RAM"及び"CACHE"はスタンドアロン時のみ有効です。RTOS使用時にはRTOS側の環境
　　　　で設定します。
　　　・"NTRACE"はトレースメッセージの表示レベルを設定します。0では無表示、1は
　　　　エラー関係のみ、3ではパケットの送受信毎に表示します。
　　　・"PTH"にはSH-Cコンパイラがインストールされているディレクトリを設定します。
　　　・その他、コンパイル／アセンブル／リンクオプションやアドレスの割り付けも
　　　　このファイル中で設定しています。

　　○DRVSRC\SH7615\clock.cに関して
　　　・スタンドアロン用のタイマルーチンです。
　　　・16ビットタイマパルスユニット（TPU）のチャネル２を使用して10ミリ秒毎の
　　　　定周期割り込みを発生させ、割り込みの回数をカウントしてタイマとして使用
　　　　しています。
　　　・割り込みのベクタ番号と優先順位の設定はclock.c中に存在します。
　　　・タイマのベースクロック周波数はモード設定及びFMRレジスタの設定値によって
　　　　決定されます。周辺モジュール用クロックの周波数を発振周波数の２倍になる様
　　　　にスタートアップルーチンでFMRレジスタを設定している事を前提にして定数を
　　　　決定しています。
　　　・タイマの周期を変更する場合は、タイマに設定する定数を変更すると共に共通変数
　　　　clocks_per_secにタイマの周波数（１秒間のカウントアップ数）を設定します。

　　○DRVSRC\SH7615\clockmt.cに関して
　　　・HI7000上で使用する場合のタイマルーチンです。
　　　・HI7000のget_timシステムコールによりタイマ値を取得します。
　　　・タイマの周期は10ミリ秒を想定しています。これを変更する場合には共通変数
　　　　clocks_per_secの設定値も変更して下さい。

　　○DRVSRC\SH7615\driver.cに関して
　　　・イーサネットコントローラの割り込みハンドラのインストールに関するルーチンが
　　　　集められています。
　　　・スタンドアロン用です。
　　　・割り込みハンドラ登録関数IRinstall()はイーサネットコントローラ（E-DMAC）専用
　　　　です。

　　○DRVSRC\SH7615\drivermt.cに関して
　　　・イーサネットコントローラの割り込みハンドラのインストールに関するルーチンが
　　　　集められています。
　　　・HI7000用です。
　　　・割り込みハンドラ登録関数IRinstall()はイーサネットコントローラ（E-DMAC）専用
　　　　です。
　　　・HI7000のdef_intシステムコールにより割り込みハンドラをインストールしています。
　　　　ベクタをROM上に持つ場合にはirhan0()を登録して下さい。この場合、IRinstall()中
　　　　で行っているIPRB及びVCRAレジスタの設定を別の場所で行わなければなりません。
　　　・割り込みハンドラ用のスタックエリアを確保しています。スタックサイズは充分と
　　　　思われる量を確保してありますが、イーサネットドライバを改造してスタックサイズが
　　　　増加した場合には注意して下さい。

　　○DRVSRC\SH7615\driver.hに関して
　　　・I/Oポートアクセス及び割り込みの許可／禁止に関するマクロが集められています。
　　　・スタンドアロン時とHI7000使用時とで１箇所設定を変更する必要があります。
　　　　割り込みの許可／禁止の部分です。詳しくはソース中のコメントを参照して下さい。
　　　・ブロック入出力及び割り込みの許可／禁止に次の関数を使用していますが、これらは
　　　　suppa2.s中に存在します。

　　○DRVSRC\SH7615\putchr.cに関して
　　　・デバッグメッセージ用のコンソール入出力モジュールです。
　　　・FIFO内蔵シリアルコミュニケーションインターフェース（SCIF）のチャネル１を
　　　　使用します。
　　　・SCIFの初期化はスタートアップルーチンで行っています。

　　○DRVSRC\SH7615\37c935.cに関して
　　　・SMC 37C935のCOM1 (コネクタCN3に接続) をPPPで使用する場合のシリアルドライバです。
　　　・ドライバ名は"S37C935"です。
　　　・netconf.cで次のパラメータを指定する必要があります。
　　　　CLOCK=ベースクロック周波数。このボードでは115200固定です。
　　　　BAUD=ビットレート

　　○DRVSRC\SH7615\HITACHI\start.sに関して
　　　・スタンドアロン用のスタートアップルーチンです。
　　　・スタックサイズはソース中で定数で設定しています。
　　　・以下のセクションを定義しています。
　　　　RAM上（compiler.makでRAM=1を設定した場合）
　　　　　Vector  - 割り込みベクタ
　　　　　Entry   - エントリポイント（※５）
　　　　　S       - コード（※６）
　　　　　C       - 定数
　　　　　D       - 初期値付きデータ
　　　　　B       - 初期値無しデータ

　　　　ROM上（compiler.makでRAM=0を設定した場合）
　　　　　Reset   - リセットエントリ。０番地固定なのでリンク時に指定不要
　　　　　Vector  - 割り込みベクタ
　　　　　S       - コード（※６）
　　　　　C       - 定数
　　　　　D       - 初期値付きデータの初期値
　　　　　B       - 初期値無しデータ
　　　　　R       - 初期値付きデータ

　　　　※５：本来は不要なのですが、モニタプログラムから起動する際にエントリ
　　　　　　　アドレスを固定した方が作業し易いので、このセクションを固定した
　　　　　　　アドレスに割り付ける事によりエントリアドレスを固定しています。
　　　　　　　このセクションがない場合のエントリアドレスはSセクションの途中です
　　　　　　　ので、このセクションがないとリンクする毎にMAPファイルを参照して
　　　　　　　エントリアドレスを調べる事になります。
　　　　※６：キャッシュの設定を行うので、このセクションはキャッシュされない
　　　　　　　アドレスに配置して下さい。

　　○DRVSRC\SH7615\HITACHI\scif.sに関して
　　　・SCIFの初期化を行います。
　　　・スタートアップルーチンの補助ルーチンなので、スタンドアロン時のみ必要です。
　　　・SCIFのビットレートは外部クロックを設定しています。

　　○DRVSRC\SH7615\HITACHI\suppa2.sに関して
　　　・各種の補助ルーチンが格納されています。

３．SH7709対応版に関する事

　　○CONFIG\SH7709\HITACHI\compiler.makに関して
　　　・"ENDIAN"はBIG及びLITTLEのどちらかを選択できます。
　　　・"RAM"は実行環境を設定します。ROMに書き込んで実行する場合は0、RAMにダウンロード
　　　　して実行する場合は1を設定します。
　　　・"CACHE"はキャッシュの使用の有無を設定します。キャッシュを使用する場合には
　　　　1、使用しない場合には0を設定します。
　　　・"RAM"及び"CACHE"はスタンドアロン時のみ有効です。RTOS使用時にはRTOS側の環境
　　　　で設定します。
　　　・"NTRACE"はトレースメッセージの表示レベルを設定します。0では無表示、1は
　　　　エラー関係のみ、3ではパケットの送受信毎に表示します。
　　　・"PTH"にはSH-Cコンパイラがインストールされているディレクトリを設定します。
　　　・その他、コンパイル／アセンブル／リンクオプションやアドレスの割り付けも
　　　　このファイル中で設定しています。

　　○DRVSRC\SH7709\clock.cに関して
　　　・スタンドアロン用のタイマルーチンです。
　　　・内蔵タイマのチャネル０を割り込みを使用せずにフリーランさせてタイマと
　　　　して使用しています。
　　　・共通変数clocks_per_secにタイマの周波数（１秒間のカウントアップ数）を
　　　　設定します。
　　　・タイマのベースクロックはRTCCLKから供給しています。そのため、共通変数
　　　　clocks_per_secへの設定値は16384固定になります。

　　○DRVSRC\SH7709\clockmt.cに関して
　　　DRVSRC\SH7615\clockmt.cの項目を参照して下さい。

　　○DRVSRC\SH7709\driver.cに関して
　　　・割り込みハンドラのインストールに関するルーチンが集められています。
　　　・スタンドアロン用です。
　　　・割り込みハンドラ登録関数IRinstall(),IRQinstall(),SCIRinstall()はある程度
　　　　汎用として使用できます。割り込みはスタートアップルーチンstart.s内の
　　　　割り込みハンドラで割り込み事由が調べられた後登録された関数をコールします。
　　　　割り込み番号の扱い等詳しくはソース中のコメントを参照して下さい。
　　　　なお、IRQinstall()及びIRQrestore()に関しては評価環境の都合上動作確認を
　　　　行っておりません。

　　○DRVSRC\SH7709\drivermt.cに関して
　　　・イーサネットコントローラの割り込みハンドラのインストールに関するルーチンが
　　　　集められています。
　　　・HI7700用です。
　　　・割り込みハンドラ登録関数IRinstall()はイーサネットコントローラ（E-DMAC）専用
　　　　です。
　　　・HI7700のdef_intシステムコールにより割り込みハンドラをインストールしています。
　　　　ベクタをROM上に持つ場合にはirhan0()を登録して下さい。この場合、IRinstall()中
　　　　で行っているIPRB及びVCRAレジスタの設定を別の場所で行わなければなりません。
　　　・割り込みハンドラ用のスタックエリアを確保しています。スタックサイズは充分と
　　　　思われる量を確保してありますが、イーサネットドライバを改造してスタックサイズが
　　　　増加した場合には注意して下さい。

　　○DRVSRC\SH7709\driver.hに関して
　　　・I/Oポートアクセス及び割り込みの許可／禁止に関するマクロが集められています。
　　　・スタンドアロン時とHI7700使用時とで１箇所設定を変更する必要があります。
　　　　割り込みの許可／禁止の部分です。詳しくはソース中のコメントを参照して下さい。
　　　・ブロック入出力及び割り込みの許可／禁止に次の関数を使用していますが、これらは
　　　　suppa2.s中に存在します。

　　○DRVSRC\SH7709\putchr.cに関して
　　　・デバッグメッセージ用のコンソール入出力モジュールです。
　　　・FIFO内蔵シリアルコミュニケーションインターフェース（SCIF）のチャネル１を
　　　　使用します。
　　　・SCIFの初期化はスタートアップルーチンで行っています。

　　○DRVSRC\SH7709\sh7709.cに関して
　　　・SCIFのチャネル１をPPPで使用する場合のシリアルドライバです。
　　　・ドライバ名は"SCI7709"です。
　　　・netconf.cで次のパラメータを指定する必要があります。
　　　　CLOCK=ベースクロック周波数。FRQCRレジスタの設定に依存します。
　　　　BAUD=ビットレート
　　　・前述のputchr.cと競合しますので、このドライバを使用する場合にはputchr.cは使用
　　　　できません。

　　○DRVSRC\SH7709\putchrcm.cに関して
　　　・デバッグメッセージ用のコンソール入出力モジュールです。
　　　・前述のsh7709.cを使用する場合の、putchr.cの代替用です。
　　　・MS7709RP01ボード上のTL16C552AのCOM1を使用します。
　　　・初期化はスタートアップでは行っていませんので、アプリケーションの起動時に
　　　　Ninitchr()を呼ぶ必要があります。
　　　・ビットレートはコンパイル時固定です。ソース中に定義があります。

　　○DRVSRC\SH7709\multi.cに関して
　　　・タスクの生成に関するモジュールです。当然、HI7700用です。
　　　・スタティックスタック用とダイナミックスタック用の２通りを選択できる様に
　　　　なっていますが、スタティックスタック時の動作検証は行っておりません。
　　　・スタティックスタックの場合のタスクIDはmtmacro.h中のMIN_TSK_IDから
　　　　MAX_TSK_IDまでの範囲で空いているタスクIDを検索して使用します。
　　　　MIN_TSK_ID及びMAX_TSK_IDの値はHI7700側の設定と一致していなければ
　　　　なりません。
　　　・ダイナミックスタックの場合のスタックサイズは定数を設定しています。
　　　　とりあえず、かなり余裕のある値を設定しています。
　　　・ダイナミックスタックの場合には１秒間のタイムスライスを設定しています。
　　　　システムの事情に応じてタイムスライスは禁止しても構いません。

