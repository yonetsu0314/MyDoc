          .FILE       "P:\PRESTO2\shlib_v7\WCU\BIOS\t0029\scuio.c"
          .EXPORT     _scu_io
          .EXPORT     _scu_io_err
          .EXPORT     _scu_io_init
          .EXPORT     _scu_io_scm
          .EXPORT     _scu_io_sst
          .EXPORT     _scu_io_putc
          .EXPORT     _scu_io_baud
          .SECTION    P,CODE,ALIGN=4 
_scu_io:                         ; function: scu_io
                                 ; frame size=0
          STS.L       PR,@-R15
;         MOV.L       #H'000000F0,R1
;         LDC         R1,SR
          AND         #H'0000000F,R0
          SHLL2       R0
          MOV.L       #jt_scu,R2  ;arrangement Top Address
          ADD         R2,R0       ;Add offset_Value
          MOV.L       @R0,R3
          MOV.L       R3,R0
          CMP/EQ      #0,R0
          BT          scu_exit
          JSR         @R0
          NOP
          LDS.L       @R15+,PR
          RTS
          NOP
scu_exit:
          MOV.L       Lrsxxx,R0   ;scu_io_err
          JSR         @R0
          NOP
          MOV.L       #-1,R0      ;システムコールの返り値は -1
          LDS.L       @R15+,PR
          RTS                     ;異常終了
          NOP
Lrsxxx:
          .DATA.L     _scu_io_err

          .ALIGN 4
jt_scu:
          .DATA.L     _scu_io_init  ; r0 = 0
          .DATA.L     _scu_io_scm   ;    = 1
          .DATA.L     _scu_io_sst   ;    = 2
          .DATA.L     _scu_io_putc  ;    = 3
          .DATA.L     _scu_io_baud  ;    = 4
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .DATA.L     0             ; none
          .ALIGN      4
          RTS
          NOP
_scu_io_err:                     ; function: scu_io_err
                                 ; frame size=0
          RTS
          MOV         #0,R0      ; H'00000000
_scu_io_init:                    ; function: scu_io_init
                                 ; frame size=8
          MOV.L       R13,@-R15
          MOV.L       R14,@-R15
          MOV         R7,R14
          MOV         R6,R13
          STC         SR,R0
          MOV         #-1,R3     ; H'FFFFFFFF
          SHLL8       R3
          ADD         #15,R3
          AND         R3,R0
          OR          #240,R0
          LDC         R0,SR
          TST         R4,R4
          BF          L14
          MOV         #-1,R7     ; H'FFFFFFFF
          MOV.L       L98+2,R2   ; __$cke
          SHLL8       R7
          ADD         #-128,R7
          MOV         #0,R0      ; H'00000000
          MOV.B       R0,@(4,R7)
          MOV         R4,R0
          MOV.B       @(R0,R2),R6
          MOV.B       @(4,R7),R0
          MOV         R0,R2
          MOV         #3,R0      ; H'00000003
          AND         R0,R6
          MOV         R2,R0
          AND         #252,R0
          OR          R6,R0
          MOV.L       L98+6,R6   ; __$baudrate
          MOV.B       R0,@(4,R7)
          MOV         R4,R0
          MOV.B       @(R0,R6),R0
          MOV.B       R0,@(2,R7)
          MOV         R5,R0
          XOR         #1,R0
          TST         #1,R0
          BF/S        L16
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #191,R0
          MOV         R0,R2
L17:
          TST         R14,R14
          BT/S        L19
          MOV.B       R2,@R7
          MOV.B       @R7,R0
          OR          #32,R0
          MOV.B       R0,@R7
          MOV         R14,R0
          AND         #1,R0
          TST         #1,R0
          BF/S        L21
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #239,R0
          MOV         R0,R2
L22:
          MOV.B       R2,@R7
L23:
          MOV         R13,R0
          TST         #1,R0
          BF/S        L25
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #247,R0
          MOV         R0,R2
L26:
          MOV.B       R2,@R7
          MOV         #-1,R5     ; H'FFFFFFFF
          MOV.B       @(8,R7),R0
          SHLL8       R5
          ADD         #-32,R5
          MOV.W       L97,R3     ; H'FF0F
          AND         #191,R0
          MOV.B       R0,@(8,R7)
          MOV.B       @(8,R7),R0
          AND         #247,R0
          MOV.B       R0,@(8,R7)
          MOV.B       @(4,R7),R0
          OR          #64,R0
          MOV.B       R0,@(4,R7)
          MOV.B       @(4,R7),R0
          OR          #32,R0
          MOV.B       R0,@(4,R7)
          MOV.B       @(4,R7),R0
          OR          #16,R0
          MOV.B       R0,@(4,R7)
          MOV.W       @(4,R5),R0
          AND         R3,R0
          OR          #80,R0
          MOV.W       R0,@(4,R5)
L27:
          STC         SR,R2
          MOV         #-1,R3     ; H'FFFFFFFF
          SHLL8       R3
          ADD         #15,R3
          AND         R3,R2
          LDC         R2,SR
          MOV         R7,R0
          MOV.L       @R15+,R14
          RTS
          MOV.L       @R15+,R13
L16:
          MOV         #64,R0     ; H'00000040
          BRA         L17
          OR          R0,R2
L21:
          MOV         #16,R0     ; H'00000010
          BRA         L22
          OR          R0,R2
L19:
          MOV.B       @R7,R0
          AND         #223,R0
          BRA         L23
          MOV.B       R0,@R7
L25:
          MOV         #8,R0      ; H'00000008
          BRA         L26
          OR          R0,R2
L14:
          MOV.L       L98+10,R7  ; H'A4000150
          MOV         #0,R0      ; H'00000000
          MOV.L       L98+2,R2   ; __$cke
          MOV.B       R0,@(4,R7)
          MOV         R4,R0
          MOV.B       @(R0,R2),R6
          MOV.B       @(4,R7),R0
          MOV         R0,R2
          MOV         #3,R0      ; H'00000003
          AND         R0,R6
          MOV         R2,R0
          AND         #252,R0
          OR          R6,R0
          MOV.L       L98+6,R6   ; __$baudrate
          MOV.B       R0,@(4,R7)
          MOV         R4,R0
          MOV.B       @(R0,R6),R0
          MOV.B       R0,@(2,R7)
          MOV         R5,R0
          XOR         #1,R0
          TST         #1,R0
          BF/S        L31
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #191,R0
          MOV         R0,R2
L32:
          TST         R14,R14
          BT/S        L34
          MOV.B       R2,@R7
          MOV.B       @R7,R0
          OR          #32,R0
          MOV.B       R0,@R7
          MOV         R14,R0
          AND         #1,R0
          TST         #1,R0
          BF/S        L36
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #239,R0
          MOV         R0,R2
L37:
          MOV.B       R2,@R7
L38:
          MOV         R13,R0
          TST         #1,R0
          BF/S        L40
          MOV.B       @R7,R2
          MOV         R2,R0
          AND         #247,R0
          MOV         R0,R2
L41:
          MOV.B       R2,@R7
          MOV         #-3,R3     ; H'FFFFFFFD
          MOV.W       @(8,R7),R0
          MOV         #-92,R5    ; H'FFFFFFA4
          SHLL8       R5
          MOV.W       L97,R1     ; H'FF0F
          AND         R3,R0
          MOV.W       R0,@(8,R7)
          SHLL16      R5
          MOV.B       @(4,R7),R0
          OR          #64,R0
          MOV.B       R0,@(4,R7)
          MOV.B       @(4,R7),R0
          OR          #32,R0
          MOV.B       R0,@(4,R7)
          MOV.B       @(4,R7),R0
          OR          #16,R0
          MOV.B       R0,@(4,R7)
          MOV.W       @(26,R5),R0
          AND         R1,R0
          OR          #80,R0
          BRA         L27
          MOV.W       R0,@(26,R5)
L31:
          MOV         #64,R0     ; H'00000040
          BRA         L32
          OR          R0,R2
L36:
          MOV         #16,R0     ; H'00000010
          BRA         L37
          OR          R0,R2
L34:
          MOV.B       @R7,R0
          AND         #223,R0
          BRA         L38
          MOV.B       R0,@R7
L40:
          MOV         #8,R0      ; H'00000008
          BRA         L41
          OR          R0,R2
_scu_io_scm:                     ; function: scu_io_scm
                                 ; frame size=0
          TST         R4,R4
          BF          L44
          MOV         R5,R0
          TST         #1,R0
          BT          L46
          MOV         #-1,R6     ; H'FFFFFFFF
          SHLL8       R6
          ADD         #-128,R6
          MOV.B       @(4,R6),R0
          OR          #32,R0
          MOV.B       R0,@(4,R6)
L47:
          MOV         R5,R0
          TST         #2,R0
          BT          L49
          MOV.B       @(4,R6),R0
          OR          #16,R0
          MOV.B       R0,@(4,R6)
L50:
          RTS
          MOV         #0,R0      ; H'00000000
L46:
          MOV         #-1,R6     ; H'FFFFFFFF
          SHLL8       R6
          ADD         #-128,R6
          MOV.B       @(4,R6),R0
          AND         #223,R0
          BRA         L47
          MOV.B       R0,@(4,R6)
L49:
          MOV.B       @(4,R6),R0
          AND         #239,R0
          BRA         L50
          MOV.B       R0,@(4,R6)
L44:
          MOV         R5,R0
          TST         #1,R0
          BT          L53
          MOV.L       L98+10,R6  ; H'A4000150
          MOV.B       @(4,R6),R0
          OR          #32,R0
          MOV.B       R0,@(4,R6)
L54:
          MOV         R5,R0
          TST         #2,R0
          BT          L56
          MOV.B       @(4,R6),R0
          OR          #16,R0
          BRA         L50
          MOV.B       R0,@(4,R6)
L53:
          MOV.L       L98+10,R6  ; H'A4000150
          MOV.B       @(4,R6),R0
          AND         #223,R0
          BRA         L54
          MOV.B       R0,@(4,R6)
L56:
          MOV.B       @(4,R6),R0
          AND         #239,R0
          BRA         L50
          MOV.B       R0,@(4,R6)
_scu_io_sst:                     ; function: scu_io_sst
                                 ; frame size=0
          TST         R4,R4
          BF          L59
          MOV         #-1,R6     ; H'FFFFFFFF
          SHLL8       R6
          ADD         #-128,R6
          MOV.B       @(8,R6),R0
          EXTU.B      R0,R2
L60:
          RTS
          MOV         R2,R0
L97:
          .DATA.W     H'FF0F
L59:
          MOV.L       L98+10,R6  ; H'A4000150
          MOV.W       @(8,R6),R0
          BRA         L60
          EXTU.W      R0,R2
_scu_io_putc:                    ; function: scu_io_putc
                                 ; frame size=0
          TST         R4,R4
          BF          L64
          MOV         #-1,R6     ; H'FFFFFFFF
          SHLL8       R6
          ADD         #-128,R6
          MOV.B       @(4,R6),R0
          OR          #112,R0
          MOV.B       R0,@(4,R6)
          MOV.B       @(4,R6),R0
          AND         #127,R0
          MOV.B       R0,@(4,R6)
          MOV.B       @(8,R6),R0
          TST         #128,R0
          BT          L66
          MOV         R5,R0
          MOV.B       R0,@(6,R6)
          MOV.B       @(8,R6),R0
          AND         #127,R0
          MOV.B       R0,@(8,R6)
L66:
          MOV.B       @(4,R6),R0
          OR          #128,R0
          MOV.B       R0,@(4,R6)
L67:
          RTS
          MOV         #0,R0      ; H'00000000
L64:
          MOV.L       L98+10,R6  ; H'A4000150
          MOV         #-33,R3    ; H'FFFFFFDF
          MOV.B       @(4,R6),R0
          OR          #112,R0
          MOV.B       R0,@(4,R6)
          MOV         R5,R0
          MOV.B       R0,@(6,R6)
          MOV.W       @(8,R6),R0
          AND         R3,R0
          MOV.W       R0,@(8,R6)
          MOV.B       @(4,R6),R0
          OR          #128,R0
          BRA         L67
          MOV.B       R0,@(4,R6)
L98:
          .RES.W      1
          .DATA.L     __$cke
          .DATA.L     __$baudrate
          .DATA.L     H'A4000150
_scu_io_baud:                    ; function: scu_io_baud
                                 ; frame size=0
          TST         R5,R5
          BT          L81
          MOV         R5,R0
          CMP/EQ      #1,R0
          BT          L83
          MOV         R5,R0
          CMP/EQ      #2,R0
          BT          L85
          MOV         R5,R0
          CMP/EQ      #3,R0
          BT          L87
          MOV         R5,R0
          CMP/EQ      #4,R0
          BT          L89
          MOV         R5,R0
          CMP/EQ      #5,R0
          BT          L91
          MOV         R5,R0
          CMP/EQ      #6,R0
          BT          L93
          MOV         R5,R0
          CMP/EQ      #7,R0
          BF          L95
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #4,R1      ; H'00000004
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          MOV.B       R1,@(R0,R2)
L95:
          RTS
          MOV         #0,R0      ; H'00000000
L81:
          MOV.L       L99,R2     ; __$cke
          MOV         #1,R3      ; H'00000001
          MOV         R4,R0
          MOV         #127,R1    ; H'0000007F
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L83:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #-1,R1     ; H'FFFFFFFF
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L85:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #127,R1    ; H'0000007F
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L87:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #63,R1     ; H'0000003F
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L89:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #31,R1     ; H'0000001F
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L91:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #15,R1     ; H'0000000F
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L93:
          MOV.L       L99,R2     ; __$cke
          MOV         #0,R3      ; H'00000000
          MOV         R4,R0
          MOV         #10,R1     ; H'0000000A
          MOV.B       R3,@(R0,R2)
          MOV.L       L99+4,R2   ; __$baudrate
          BRA         L95
          MOV.B       R1,@(R0,R2)
L99:
          .DATA.L     __$cke
          .DATA.L     __$baudrate
          .SECTION    B,DATA,ALIGN=4 
__$baudrate:                     ; static: __$baudrate
          .RES.B      2
__$cke:                          ; static: __$cke
          .RES.B      2
          .END
