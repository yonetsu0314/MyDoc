#
#	chg_id.pl	1993.07.12	R.Nishimura
#
#  機能：
#	大文字と小文字が混在した識別子を、
#	小文字とアンダーラインからなる識別子に変換する。
#
#　ルール１：	[a-z][A-Z] ---> [a-z]_[a-z]
#
#	小文字の後の大文字を、
#	アンダーライン付きの小文字に変換する。
#
#　ルール２：	[A-Z][A-Z][a-z] ---> [A-Z]_[a-z][a-z]
#
#	大文字と小文字の間の大文字を、
#	アンダーライン付きの小文字に変換する。
#
#　ルール３：	[A-Z][A-Z][_][a-z] ---> [A-Z]_[a-z][_][a-z]
#
#	大文字とアンダーライン付き小文字の間の大文字を、
#	アンダーライン付きの小文字に変換する。
#
#　ルール４：	[A-Z][a-z] ---> [a-z][a-z]
#
#	大文字以外と小文字の間の大文字を、
#	アンダーライン付きの小文字に変換する。#
#
#　ルール５：	[A-Z][_][a-z] ---> [a-z]_[a-z]
#
#	大文字以外とアンダーライン付き小文字の間の大文字を、
#	アンダーライン付きの小文字に変換する。
#
#　注意：
#	 コメント内や表示文字列も変換される。
#
for $fname (@ARGV) {
	unless (open(F, $fname)) {
		warn "$fname: $!\n";
		next;
	}
#	print "\n/*\t$fname\t*/\n";	# 読み込みファイル名
	while (<F>) {
		while(/[a-z][A-Z]/) {
			s/([a-z])([A-Z])/$1_\l$2/g;
		};
		while(/[A-Z][A-Z][a-z]/) {
			s/([A-Z])([A-Z])([a-z])/$1_\l$2$3/g;
		};
		while(/[A-Z][A-Z][_][a-z]/) {
			s/([A-Z])([A-Z])([_])([a-z])/$1_\l$2$3$4/g;
		};
		while(/[A-Z][a-z]/) {
			s/([A-Z])([a-z])/\l$1$2/g;
		};
		while(/[A-Z][_][a-z]/) {
			s/([A-Z])([_])([a-z])/\l$1$2$3/g;
		};
		print;
	}
	close(F);
}
